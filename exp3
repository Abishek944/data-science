Aim:
Write a python program to work with Panda data frames.
Pandas
Pandas is an open-source library that is built on top of NumPy library. It is a Python
package that offers various data structures and operations for manipulating numerical data and
time series. It is mainly popular for importing and analyzing data much easier. Pandas is fast
and it has high-performance &amp; productivity for users.
Pandas DataFrame
In the real world, a Pandas DataFrame will be created by loading the datasets from
existing storage, storage can be SQL Database, CSV file, and Excel file. Pandas DataFrame
can be created from the lists, dictionary, and from a list of dictionary etc.
Pandas DataFrame is two-dimensional size-mutable, potentially heterogeneous tabular data
structure with labeled axes (rows and columns). A Data frame is a two-dimensional data
structure, i.e., data is aligned in a tabular fashion in rows and columns. Pandas DataFrame
consists of three principal components, the data, rows, and columns.

Creating a Panda Data Frames
A pandas DataFrame can be created using the following constructor âˆ’
pandas.DataFrame( data, index, columns, dtype, copy)

.

Creating an empty dataframe :
A basic DataFrame, which can be created is an Empty Dataframe. An Empty Dataframe is
created just by calling a dataframe constructor.
Creating a dataframe using List:
DataFrame can be created using a single list or a list of lists.
Creating dataframe from dict of ndarray/lists:
To create dataframe from dict of narray/list, all the narray must be of same length. If index is
passed then the length index should be equal to the length of arrays. If no index is passed, then
by default, index will be range(n) where n is the array length.
Iterating over rows :
In order to iterate over rows, we can use three function iteritems(), iterrows(), itertuples() .
These three function will help in iteration over rows.
Program
import pandas as pd

# Calling DataFrame constructor
print(&quot;Empty dataframe&quot;)
df = pd.DataFrame()
print(df)
print(&quot;Dataframe creation using List&quot;)
# list of strings
lst = [&#39;Geeks&#39;, &#39;For&#39;, &#39;Geeks&#39;, &#39;is&#39;, &#39;portal&#39;, &#39;for&#39;, &#39;Geeks&#39;]
# Calling DataFrame constructor on list
df = pd.DataFrame(lst)
print(df)
# initialise data of lists.
Data = {&#39;Name&#39;:[&#39;Tom&#39;, &#39;nick&#39;, &#39;krish&#39;, &#39;jack&#39;], &#39;Age&#39;:[20, 21, 19, 18]}
# Create dataframe

df = pd.DataFrame(Data)
# Print the output.
print(df)
print(&quot;Create dataframe from dictionoary of lists&quot;)
# dictionary of lists
dict = {&#39;name&#39;:[&quot;aparna&quot;, &quot;pankaj&quot;, &quot;sudhir&quot;, &quot;Geeku&quot;],
&#39;Degree&#39;: [&quot;MBA&quot;, &quot;BCA&quot;, &quot;M.Tech&quot;, &quot;MBA&quot;],
&#39;Score&#39;:[90, 40, 80, 98]}

# creating a dataframe from a dictionary
df = pd.DataFrame(dict)
print(df)
# iterating over rows using iterrows() function
for i, j in df.iterrows():
print(i, j)
print()

OUTPUT
Empty dataframe
Empty DataFrame
Columns: []
Index: []
Dataframe creation using List
0
Geeks
1 For
2 Geeks
3 is
4 portal
5 for
6 Geeks
Tom 20
1 nick 21
2 krish 19

3 jack 18
Create dataframe from dictionoary of lists
name Degree Score
0 aparna MBA 90
1 pankaj BCA 40
2 sudhir M.Tech 80
3 Geeku MBA 98
0 name aparna
Degree MBA
Score 90
Name: 0, dtype: object
1 name pankaj
Degree BCA
Score 40
Name: 1, dtype: object
2 name sudhir
Degree M.Tech
Score 80
Name: 2, dtype: object
3 name Geeku
Degree MBA
Score 98
Name: 3, dtype: object
Pandas Dataframe visualization
Retrieving data from the web
In[1]:

import pandas as pd
url =
&#39;https://github.com/chris1610/pbpython/blob/master/data/2018_Sales_Total_v2.xlsx?raw=True&#39;
df = pd.read_excel(url)
df
OUTPUT

Pandas for retrieving data from the csv file
In[2]:
import pandas as pd
data = pd.read_csv(r&#39;C:\Users\HI\Downloads\PythonDataScienceHandbook-
master\notebooks\data\iris.csv&#39;)
df = pd.DataFrame(data)
print (df)
Out[2]:

Questions:
1) Write a Pandas program to select the specified columns and rows from a given data frame. Sample Python
dictionary data and list labels:
Select &#39;name&#39; and &#39;score&#39; columns in rows 1, 3, 5, 6 from the following data frame.
exam_data = {&#39;name&#39;: [&#39;Anastasia&#39;, &#39;Dima&#39;, &#39;Katherine&#39;, &#39;James&#39;, &#39;Emily&#39;, &#39;Michael&#39;, &#39;Matthew&#39;, &#39;Laura&#39;, &#39;Kevin&#39;, &#39;Jonas&#39;],
&#39;score&#39;: [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
&#39;attempts&#39;: [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
&#39;qualify&#39;: [&#39;yes&#39;, &#39;no&#39;, &#39;yes&#39;, &#39;no&#39;, &#39;no&#39;, &#39;yes&#39;, &#39;yes&#39;, &#39;no&#39;, &#39;no&#39;, &#39;yes&#39;]}
labels = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;]

Expected Output:
Select specific columns and rows:
score qualify
b 9.0 no
d NaN no
f 20.0 yes
g 14.5 yes
2) Write a Pandas program to count the number of rows and columns of a DataFrame. Sample Python dictionary
data and list labels:
exam_data = {&#39;name&#39;: [&#39;Anastasia&#39;, &#39;Dima&#39;, &#39;Katherine&#39;, &#39;James&#39;, &#39;Emily&#39;, &#39;Michael&#39;, &#39;Matthew&#39;, &#39;Laura&#39;, &#39;Kevin&#39;, &#39;Jonas&#39;],
&#39;score&#39;: [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
&#39;attempts&#39;: [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
&#39;qualify&#39;: [&#39;yes&#39;, &#39;no&#39;, &#39;yes&#39;, &#39;no&#39;, &#39;no&#39;, &#39;yes&#39;, &#39;yes&#39;, &#39;no&#39;, &#39;no&#39;, &#39;yes&#39;]}
labels = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;]
Expected Output:
Number of Rows: 10
Number of Columns: 4
3) Write a Pandas program to select the rows where the number of attempts in the examination is greater than 2.
Sample Python dictionary data and list labels:
exam_data = {&#39;name&#39;: [&#39;Anastasia&#39;, &#39;Dima&#39;, &#39;Katherine&#39;, &#39;James&#39;, &#39;Emily&#39;, &#39;Michael&#39;, &#39;Matthew&#39;, &#39;Laura&#39;, &#39;Kevin&#39;, &#39;Jonas&#39;],
&#39;score&#39;: [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
&#39;attempts&#39;: [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
&#39;qualify&#39;: [&#39;yes&#39;, &#39;no&#39;, &#39;yes&#39;, &#39;no&#39;, &#39;no&#39;, &#39;yes&#39;, &#39;yes&#39;, &#39;no&#39;, &#39;no&#39;, &#39;yes&#39;]}
labels = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;]
Expected Output:
Number of attempts in the examination is greater than 2:
name score attempts qualify
b Dima 9.0 3 no
d James NaN 3 no
f Michael 20.0 3 yes
4) Write a Pandas program to get the first 3 rows of a given DataFrame.
Sample Python dictionary data and list labels:
exam_data = {&#39;name&#39;: [&#39;Anastasia&#39;, &#39;Dima&#39;, &#39;Katherine&#39;, &#39;James&#39;, &#39;Emily&#39;, &#39;Michael&#39;, &#39;Matthew&#39;, &#39;Laura&#39;, &#39;Kevin&#39;, &#39;Jonas&#39;],
&#39;score&#39;: [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
&#39;attempts&#39;: [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
&#39;qualify&#39;: [&#39;yes&#39;, &#39;no&#39;, &#39;yes&#39;, &#39;no&#39;, &#39;no&#39;, &#39;yes&#39;, &#39;yes&#39;, &#39;no&#39;, &#39;no&#39;, &#39;yes&#39;]}
labels = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;]
Expected Output:
First three rows of the data frame:
attempts name qualify score
a 1 Anastasia yes 12.5
b 3 Dima no 9.0
c 2 Katherine yes 16.5

Result:
Thus the python program is written to show the working of pandas dataframes
